# install some rc files
---

- name: Write environment variables and aliases to /etc/profile.d/lang.sh
  blockinfile:
    path: /etc/profile.d/lang.sh
    create: true # Create the file if it doesn't exist
    mode: '0755' # Make the file executable
    owner: root
    group: root
    block: |
      # System-wide environment variables for Go and Node.js
      export GOROOT=/usr/local/go
      export NODEROOT=/usr/local/node
      export NODE_ENV=production
      export GOPROXY=https://goproxy.cn,direct
      export PATH=$PATH:$GOROOT/bin:$NODEROOT/bin
      
      export RUSTUP_UPDATE_ROOT=https://mirrors.tuna.tsinghua.edu.cn/rustup/rustup
      export RUSTUP_DIST_SERVER=https://mirrors.tuna.tsinghua.edu.cn/rustup
      export UV_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
      export UV_NO_CACHE=1
      export PIP_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
      
      # Custom Aliases
      alias temperature="cat /sys/class/thermal/thermal_zone0/temp"
      alias wget='wget -c '
      alias getpass="openssl rand -base64 20"
      alias sha='shasum -a 256 '
      alias ping='ping -c 5'
      alias www='python -m SimpleHTTPServer 8000'
      alias ipe='curl myip.ipip.net'
      alias c='clear'

- name: Get list of users with /bin/bash shell
  shell: |
    awk -F: '/\/bin\/bash/ {print $6}' /etc/passwd
  register: homes

- name: Extract home directories 
  set_fact:
    target_homes: "{{ homes.stdout_lines  | select('match', '^(/root|/home).*') | list }}"

- name: Ensure .cargo directory exists for all target homes
  file:
    path: "{{ item }}/.cargo"
    state: directory
    owner: "{{ item.split('/')[(-1)] }}"
    group: "{{ item.split('/')[(-1)] }}"
    mode: '0700'
  with_items: "{{ target_homes }}"

- name: Ensure .pip directory exists for all target homes
  file:
    path: "{{ item }}/.pip"
    state: directory
    owner: "{{ item.split('/')[(-1)] }}"
    group: "{{ item.split('/')[(-1)] }}"
    mode: '0700'
  with_items: "{{ target_homes }}"

- name: Create or update .cargo/config.toml
  copy:
    content: |
      [source.crates-io]
      registry = "https://github.com/rust-lang/crates.io-index"
      replace-with = 'aliyun'

      [source.aliyun]
      registry = "sparse+https://mirrors.aliyun.com/crates.io-index/"

      [source.sjtu]
      registry = "https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/"

      [source.tuna]
      registry = "https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git"
    dest: "{{ item }}/.cargo/config.toml"
    owner: "{{ item.split('/')[(-1)] }}"
    group: "{{ item.split('/')[(-1)] }}"
    mode: '0644'
  with_items: "{{ target_homes }}"

- name: Create or update .npmrc
  copy:
    content: |
      registry=https://registry.npmmirror.com
    dest: "{{ item }}/.npmrc"
    owner: "{{ item.split('/')[(-1)] }}"
    group: "{{ item.split('/')[(-1)] }}"
    mode: '0644'
  with_items: "{{ target_homes }}"

- name: Create or update .pip/pip.conf
  copy:
    content: |
      [global]
      index-url=https://pypi.tuna.tsinghua.edu.cn/simple
    dest: "{{ item }}/.pip/pip.conf"
    owner: "{{ item.split('/')[(-1)] }}"
    group: "{{ item.split('/')[(-1)] }}"
    mode: '0644'
  with_items: "{{ target_homes }}"
